/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class m
/*      */   extends aqw.n
/*      */ {
/*      */   public m() {}
/*      */   
/*      */   public m(aqw.k ☃, int i, Random random, aqe aqe1, cq cq1) {
/* 1322 */     super(☃, i);
/*      */     
/* 1324 */     this.m = cq1;
/* 1325 */     this.l = aqe1;
/*      */   }
/*      */   
/*      */   public static m a(aqw.k ☃, List<aqt> list, Random random, int i, int j, int i1, cq cq1, int i2) {
/* 1329 */     aqe aqe = aqe.a(i, j, i1, 0, 0, 0, 9, 7, 12, cq1);
/*      */     
/* 1331 */     if (!a(aqe) || aqt.a(list, aqe) != null) {
/* 1332 */       return null;
/*      */     }
/*      */     
/* 1335 */     return new m(☃, i2, random, aqe, cq1);
/*      */   }
/*      */ 
/*      */   
/*      */   public boolean a(adm ☃, Random random, aqe aqe1) {
/* 1340 */     if (this.h < 0) {
/* 1341 */       this.h = b(☃, aqe1);
/* 1342 */       if (this.h < 0) {
/* 1343 */         return true;
/*      */       }
/* 1345 */       this.l.a(0, this.h - this.l.e + 7 - 1, 0);
/*      */     } 
/*      */ 
/*      */     
/* 1349 */     a(☃, aqe1, 1, 1, 1, 7, 4, 4, afi.a.Q(), afi.a.Q(), false);
/* 1350 */     a(☃, aqe1, 2, 1, 6, 8, 4, 10, afi.a.Q(), afi.a.Q(), false);
/*      */ 
/*      */     
/* 1353 */     a(☃, aqe1, 2, 0, 5, 8, 0, 10, afi.f.Q(), afi.f.Q(), false);
/* 1354 */     a(☃, aqe1, 1, 0, 1, 7, 0, 4, afi.f.Q(), afi.f.Q(), false);
/* 1355 */     a(☃, aqe1, 0, 0, 0, 0, 3, 5, afi.e.Q(), afi.e.Q(), false);
/* 1356 */     a(☃, aqe1, 8, 0, 0, 8, 3, 10, afi.e.Q(), afi.e.Q(), false);
/* 1357 */     a(☃, aqe1, 1, 0, 0, 7, 2, 0, afi.e.Q(), afi.e.Q(), false);
/* 1358 */     a(☃, aqe1, 1, 0, 5, 2, 1, 5, afi.e.Q(), afi.e.Q(), false);
/* 1359 */     a(☃, aqe1, 2, 0, 6, 2, 3, 10, afi.e.Q(), afi.e.Q(), false);
/* 1360 */     a(☃, aqe1, 3, 0, 10, 7, 3, 10, afi.e.Q(), afi.e.Q(), false);
/*      */ 
/*      */     
/* 1363 */     a(☃, aqe1, 1, 2, 0, 7, 3, 0, afi.f.Q(), afi.f.Q(), false);
/* 1364 */     a(☃, aqe1, 1, 2, 5, 2, 3, 5, afi.f.Q(), afi.f.Q(), false);
/* 1365 */     a(☃, aqe1, 0, 4, 1, 8, 4, 1, afi.f.Q(), afi.f.Q(), false);
/* 1366 */     a(☃, aqe1, 0, 4, 4, 3, 4, 4, afi.f.Q(), afi.f.Q(), false);
/* 1367 */     a(☃, aqe1, 0, 5, 2, 8, 5, 3, afi.f.Q(), afi.f.Q(), false);
/* 1368 */     a(☃, afi.f.Q(), 0, 4, 2, aqe1);
/* 1369 */     a(☃, afi.f.Q(), 0, 4, 3, aqe1);
/* 1370 */     a(☃, afi.f.Q(), 8, 4, 2, aqe1);
/* 1371 */     a(☃, afi.f.Q(), 8, 4, 3, aqe1);
/* 1372 */     a(☃, afi.f.Q(), 8, 4, 4, aqe1);
/*      */     
/* 1374 */     int i = a(afi.ad, 3);
/* 1375 */     int j = a(afi.ad, 2); int k;
/* 1376 */     for (k = -1; k <= 2; k++) {
/* 1377 */       for (int i3 = 0; i3 <= 8; i3++) {
/* 1378 */         a(☃, afi.ad.a(i), i3, 4 + k, k, aqe1);
/* 1379 */         if ((k > -1 || i3 <= 1) && (k > 0 || i3 <= 3) && (k > 1 || i3 <= 4 || i3 >= 6)) {
/* 1380 */           a(☃, afi.ad.a(j), i3, 4 + k, 5 - k, aqe1);
/*      */         }
/*      */       } 
/*      */     } 
/*      */ 
/*      */     
/* 1386 */     a(☃, aqe1, 3, 4, 5, 3, 4, 10, afi.f.Q(), afi.f.Q(), false);
/* 1387 */     a(☃, aqe1, 7, 4, 2, 7, 4, 10, afi.f.Q(), afi.f.Q(), false);
/* 1388 */     a(☃, aqe1, 4, 5, 4, 4, 5, 10, afi.f.Q(), afi.f.Q(), false);
/* 1389 */     a(☃, aqe1, 6, 5, 4, 6, 5, 10, afi.f.Q(), afi.f.Q(), false);
/* 1390 */     a(☃, aqe1, 5, 6, 3, 5, 6, 10, afi.f.Q(), afi.f.Q(), false);
/* 1391 */     k = a(afi.ad, 0); int i1;
/* 1392 */     for (i1 = 4; i1 >= 1; i1--) {
/* 1393 */       a(☃, afi.f.Q(), i1, 2 + i1, 7 - i1, aqe1);
/* 1394 */       for (int i3 = 8 - i1; i3 <= 10; i3++) {
/* 1395 */         a(☃, afi.ad.a(k), i1, 2 + i1, i3, aqe1);
/*      */       }
/*      */     } 
/* 1398 */     i1 = a(afi.ad, 1);
/* 1399 */     a(☃, afi.f.Q(), 6, 6, 3, aqe1);
/* 1400 */     a(☃, afi.f.Q(), 7, 5, 4, aqe1);
/* 1401 */     a(☃, afi.ad.a(i1), 6, 6, 4, aqe1); int i2;
/* 1402 */     for (i2 = 6; i2 <= 8; i2++) {
/* 1403 */       for (int i3 = 5; i3 <= 10; i3++) {
/* 1404 */         a(☃, afi.ad.a(i1), i2, 12 - i2, i3, aqe1);
/*      */       }
/*      */     } 
/*      */ 
/*      */     
/* 1409 */     a(☃, afi.r.Q(), 0, 2, 1, aqe1);
/* 1410 */     a(☃, afi.r.Q(), 0, 2, 4, aqe1);
/* 1411 */     a(☃, afi.bj.Q(), 0, 2, 2, aqe1);
/* 1412 */     a(☃, afi.bj.Q(), 0, 2, 3, aqe1);
/*      */     
/* 1414 */     a(☃, afi.r.Q(), 4, 2, 0, aqe1);
/* 1415 */     a(☃, afi.bj.Q(), 5, 2, 0, aqe1);
/* 1416 */     a(☃, afi.r.Q(), 6, 2, 0, aqe1);
/*      */     
/* 1418 */     a(☃, afi.r.Q(), 8, 2, 1, aqe1);
/* 1419 */     a(☃, afi.bj.Q(), 8, 2, 2, aqe1);
/* 1420 */     a(☃, afi.bj.Q(), 8, 2, 3, aqe1);
/* 1421 */     a(☃, afi.r.Q(), 8, 2, 4, aqe1);
/* 1422 */     a(☃, afi.f.Q(), 8, 2, 5, aqe1);
/* 1423 */     a(☃, afi.r.Q(), 8, 2, 6, aqe1);
/* 1424 */     a(☃, afi.bj.Q(), 8, 2, 7, aqe1);
/* 1425 */     a(☃, afi.bj.Q(), 8, 2, 8, aqe1);
/* 1426 */     a(☃, afi.r.Q(), 8, 2, 9, aqe1);
/* 1427 */     a(☃, afi.r.Q(), 2, 2, 6, aqe1);
/* 1428 */     a(☃, afi.bj.Q(), 2, 2, 7, aqe1);
/* 1429 */     a(☃, afi.bj.Q(), 2, 2, 8, aqe1);
/* 1430 */     a(☃, afi.r.Q(), 2, 2, 9, aqe1);
/*      */     
/* 1432 */     a(☃, afi.r.Q(), 4, 4, 10, aqe1);
/* 1433 */     a(☃, afi.bj.Q(), 5, 4, 10, aqe1);
/* 1434 */     a(☃, afi.r.Q(), 6, 4, 10, aqe1);
/* 1435 */     a(☃, afi.f.Q(), 5, 5, 10, aqe1);
/*      */ 
/*      */     
/* 1438 */     a(☃, afi.a.Q(), 2, 1, 0, aqe1);
/* 1439 */     a(☃, afi.a.Q(), 2, 2, 0, aqe1);
/* 1440 */     a(☃, afi.aa.Q().a(akf.a, this.m), 2, 3, 1, aqe1);
/* 1441 */     a(☃, aqe1, random, 2, 1, 0, cq.b(a(afi.ao, 1)));
/* 1442 */     a(☃, aqe1, 1, 0, -1, 3, 2, -1, afi.a.Q(), afi.a.Q(), false);
/* 1443 */     if (a(☃, 2, 0, -1, aqe1).c().t() == arm.a && a(☃, 2, -1, -1, aqe1).c().t() != arm.a) {
/* 1444 */       a(☃, afi.aw.a(a(afi.aw, 3)), 2, 0, -1, aqe1);
/*      */     }
/*      */     
/* 1447 */     for (i2 = 0; i2 < 5; i2++) {
/* 1448 */       for (int i3 = 0; i3 < 9; i3++) {
/* 1449 */         b(☃, i3, 7, i2, aqe1);
/* 1450 */         b(☃, afi.e.Q(), i3, -1, i2, aqe1);
/*      */       } 
/*      */     } 
/* 1453 */     for (i2 = 5; i2 < 11; i2++) {
/* 1454 */       for (int i3 = 2; i3 < 9; i3++) {
/* 1455 */         b(☃, i3, 7, i2, aqe1);
/* 1456 */         b(☃, afi.e.Q(), i3, -1, i2, aqe1);
/*      */       } 
/*      */     } 
/*      */     
/* 1460 */     a(☃, aqe1, 4, 1, 2, 2);
/*      */     
/* 1462 */     return true;
/*      */   }
/*      */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqw$m.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */