/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class l
/*     */   extends aqp.p
/*     */ {
/*     */   private boolean a;
/*     */   
/*     */   public l() {}
/*     */   
/*     */   public l(int ☃, Random random, int i, int j) {
/* 450 */     super(☃);
/*     */     
/* 452 */     this.a = true;
/* 453 */     this.m = cq.c.a.a(random);
/* 454 */     this.d = aqp.p.a.a;
/*     */     
/* 456 */     switch (aqp.null.b[this.m.ordinal()]) {
/*     */       case 1:
/*     */       case 2:
/* 459 */         this.l = new aqe(i, 64, j, i + 5 - 1, 74, j + 5 - 1);
/*     */         return;
/*     */     } 
/* 462 */     this.l = new aqe(i, 64, j, i + 5 - 1, 74, j + 5 - 1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public l(int ☃, Random random, aqe aqe1, cq cq1) {
/* 468 */     super(☃);
/*     */     
/* 470 */     this.a = false;
/* 471 */     this.m = cq1;
/* 472 */     this.d = a(random);
/* 473 */     this.l = aqe1;
/*     */   }
/*     */ 
/*     */   
/*     */   protected void a(dn ☃) {
/* 478 */     super.a(☃);
/* 479 */     ☃.a("Source", this.a);
/*     */   }
/*     */ 
/*     */   
/*     */   protected void b(dn ☃) {
/* 484 */     super.b(☃);
/* 485 */     this.a = ☃.n("Source");
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(aqt ☃, List<aqt> list, Random random) {
/* 490 */     if (this.a)
/*     */     {
/* 492 */       aqp.a(aqp.c.class);
/*     */     }
/* 494 */     a((aqp.m)☃, list, random, 1, 1);
/*     */   }
/*     */   
/*     */   public static l a(List<aqt> ☃, Random random, int i, int j, int k, cq cq1, int m) {
/* 498 */     aqe aqe = aqe.a(i, j, k, -1, -7, 0, 5, 11, 5, cq1);
/*     */     
/* 500 */     if (!a(aqe) || aqt.a(☃, aqe) != null) {
/* 501 */       return null;
/*     */     }
/*     */     
/* 504 */     return new l(m, random, aqe, cq1);
/*     */   }
/*     */ 
/*     */   
/*     */   public boolean a(adm ☃, Random random, aqe aqe1) {
/* 509 */     if (a(☃, aqe1)) {
/* 510 */       return false;
/*     */     }
/*     */ 
/*     */     
/* 514 */     a(☃, aqe1, 0, 0, 0, 4, 10, 4, true, random, aqp.c());
/*     */     
/* 516 */     a(☃, random, aqe1, this.d, 1, 7, 0);
/*     */     
/* 518 */     a(☃, random, aqe1, aqp.p.a.a, 1, 1, 4);
/*     */ 
/*     */     
/* 521 */     a(☃, afi.bf.Q(), 2, 6, 1, aqe1);
/* 522 */     a(☃, afi.bf.Q(), 1, 5, 1, aqe1);
/* 523 */     a(☃, afi.U.a(akb.a.a.a()), 1, 6, 1, aqe1);
/* 524 */     a(☃, afi.bf.Q(), 1, 5, 2, aqe1);
/* 525 */     a(☃, afi.bf.Q(), 1, 4, 3, aqe1);
/* 526 */     a(☃, afi.U.a(akb.a.a.a()), 1, 5, 3, aqe1);
/* 527 */     a(☃, afi.bf.Q(), 2, 4, 3, aqe1);
/* 528 */     a(☃, afi.bf.Q(), 3, 3, 3, aqe1);
/* 529 */     a(☃, afi.U.a(akb.a.a.a()), 3, 4, 3, aqe1);
/* 530 */     a(☃, afi.bf.Q(), 3, 3, 2, aqe1);
/* 531 */     a(☃, afi.bf.Q(), 3, 2, 1, aqe1);
/* 532 */     a(☃, afi.U.a(akb.a.a.a()), 3, 3, 1, aqe1);
/* 533 */     a(☃, afi.bf.Q(), 2, 2, 1, aqe1);
/* 534 */     a(☃, afi.bf.Q(), 1, 1, 1, aqe1);
/* 535 */     a(☃, afi.U.a(akb.a.a.a()), 1, 2, 1, aqe1);
/* 536 */     a(☃, afi.bf.Q(), 1, 1, 2, aqe1);
/* 537 */     a(☃, afi.U.a(akb.a.a.a()), 1, 1, 3, aqe1);
/*     */     
/* 539 */     return true;
/*     */   }
/*     */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqp$l.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */