/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class k
/*      */   extends aqj.m
/*      */ {
/*      */   public k() {}
/*      */   
/*      */   public k(int ☃, Random random, aqe aqe1, cq cq1) {
/*  956 */     super(☃);
/*      */     
/*  958 */     this.m = cq1;
/*  959 */     this.l = aqe1;
/*      */   }
/*      */ 
/*      */   
/*      */   public void a(aqt ☃, List<aqt> list, Random random) {
/*  964 */     a((aqj.q)☃, list, random, 5, 3, true);
/*  965 */     a((aqj.q)☃, list, random, 5, 11, true);
/*      */   }
/*      */   
/*      */   public static k a(List<aqt> ☃, Random random, int i, int j, int n, cq cq1, int i1) {
/*  969 */     aqe aqe = aqe.a(i, j, n, -5, -3, 0, 13, 14, 13, cq1);
/*      */     
/*  971 */     if (!a(aqe) || aqt.a(☃, aqe) != null) {
/*  972 */       return null;
/*      */     }
/*      */     
/*  975 */     return new k(i1, random, aqe, cq1);
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean a(adm ☃, Random random, aqe aqe1) {
/*  981 */     a(☃, aqe1, 0, 3, 0, 12, 4, 12, afi.by.Q(), afi.by.Q(), false);
/*      */     
/*  983 */     a(☃, aqe1, 0, 5, 0, 12, 13, 12, afi.a.Q(), afi.a.Q(), false);
/*      */ 
/*      */     
/*  986 */     a(☃, aqe1, 0, 5, 0, 1, 12, 12, afi.by.Q(), afi.by.Q(), false);
/*  987 */     a(☃, aqe1, 11, 5, 0, 12, 12, 12, afi.by.Q(), afi.by.Q(), false);
/*  988 */     a(☃, aqe1, 2, 5, 11, 4, 12, 12, afi.by.Q(), afi.by.Q(), false);
/*  989 */     a(☃, aqe1, 8, 5, 11, 10, 12, 12, afi.by.Q(), afi.by.Q(), false);
/*  990 */     a(☃, aqe1, 5, 9, 11, 7, 12, 12, afi.by.Q(), afi.by.Q(), false);
/*  991 */     a(☃, aqe1, 2, 5, 0, 4, 12, 1, afi.by.Q(), afi.by.Q(), false);
/*  992 */     a(☃, aqe1, 8, 5, 0, 10, 12, 1, afi.by.Q(), afi.by.Q(), false);
/*  993 */     a(☃, aqe1, 5, 9, 0, 7, 12, 1, afi.by.Q(), afi.by.Q(), false);
/*      */ 
/*      */     
/*  996 */     a(☃, aqe1, 2, 11, 2, 10, 12, 10, afi.by.Q(), afi.by.Q(), false);
/*      */     
/*      */     int i;
/*  999 */     for (i = 1; i <= 11; i += 2) {
/* 1000 */       a(☃, aqe1, i, 10, 0, i, 11, 0, afi.bz.Q(), afi.bz.Q(), false);
/* 1001 */       a(☃, aqe1, i, 10, 12, i, 11, 12, afi.bz.Q(), afi.bz.Q(), false);
/* 1002 */       a(☃, aqe1, 0, 10, i, 0, 11, i, afi.bz.Q(), afi.bz.Q(), false);
/* 1003 */       a(☃, aqe1, 12, 10, i, 12, 11, i, afi.bz.Q(), afi.bz.Q(), false);
/* 1004 */       a(☃, afi.by.Q(), i, 13, 0, aqe1);
/* 1005 */       a(☃, afi.by.Q(), i, 13, 12, aqe1);
/* 1006 */       a(☃, afi.by.Q(), 0, 13, i, aqe1);
/* 1007 */       a(☃, afi.by.Q(), 12, 13, i, aqe1);
/* 1008 */       a(☃, afi.bz.Q(), i + 1, 13, 0, aqe1);
/* 1009 */       a(☃, afi.bz.Q(), i + 1, 13, 12, aqe1);
/* 1010 */       a(☃, afi.bz.Q(), 0, 13, i + 1, aqe1);
/* 1011 */       a(☃, afi.bz.Q(), 12, 13, i + 1, aqe1);
/*      */     } 
/* 1013 */     a(☃, afi.bz.Q(), 0, 13, 0, aqe1);
/* 1014 */     a(☃, afi.bz.Q(), 0, 13, 12, aqe1);
/* 1015 */     a(☃, afi.bz.Q(), 0, 13, 0, aqe1);
/* 1016 */     a(☃, afi.bz.Q(), 12, 13, 0, aqe1);
/*      */ 
/*      */     
/* 1019 */     for (i = 3; i <= 9; i += 2) {
/* 1020 */       a(☃, aqe1, 1, 7, i, 1, 8, i, afi.bz.Q(), afi.bz.Q(), false);
/* 1021 */       a(☃, aqe1, 11, 7, i, 11, 8, i, afi.bz.Q(), afi.bz.Q(), false);
/*      */     } 
/*      */ 
/*      */     
/* 1025 */     i = a(afi.bA, 3); int j;
/* 1026 */     for (j = 0; j <= 6; j++) {
/* 1027 */       int i2 = j + 4;
/* 1028 */       for (int i3 = 5; i3 <= 7; i3++) {
/* 1029 */         a(☃, afi.bA.a(i), i3, 5 + j, i2, aqe1);
/*      */       }
/* 1031 */       if (i2 >= 5 && i2 <= 8) {
/* 1032 */         a(☃, aqe1, 5, 5, i2, 7, j + 4, i2, afi.by.Q(), afi.by.Q(), false);
/* 1033 */       } else if (i2 >= 9 && i2 <= 10) {
/* 1034 */         a(☃, aqe1, 5, 8, i2, 7, j + 4, i2, afi.by.Q(), afi.by.Q(), false);
/*      */       } 
/* 1036 */       if (j >= 1) {
/* 1037 */         a(☃, aqe1, 5, 6 + j, i2, 7, 9 + j, i2, afi.a.Q(), afi.a.Q(), false);
/*      */       }
/*      */     } 
/* 1040 */     for (j = 5; j <= 7; j++) {
/* 1041 */       a(☃, afi.bA.a(i), j, 12, 11, aqe1);
/*      */     }
/* 1043 */     a(☃, aqe1, 5, 6, 7, 5, 7, 7, afi.bz.Q(), afi.bz.Q(), false);
/* 1044 */     a(☃, aqe1, 7, 6, 7, 7, 7, 7, afi.bz.Q(), afi.bz.Q(), false);
/* 1045 */     a(☃, aqe1, 5, 13, 12, 7, 13, 12, afi.a.Q(), afi.a.Q(), false);
/*      */ 
/*      */     
/* 1048 */     a(☃, aqe1, 2, 5, 2, 3, 5, 3, afi.by.Q(), afi.by.Q(), false);
/* 1049 */     a(☃, aqe1, 2, 5, 9, 3, 5, 10, afi.by.Q(), afi.by.Q(), false);
/* 1050 */     a(☃, aqe1, 2, 5, 4, 2, 5, 8, afi.by.Q(), afi.by.Q(), false);
/* 1051 */     a(☃, aqe1, 9, 5, 2, 10, 5, 3, afi.by.Q(), afi.by.Q(), false);
/* 1052 */     a(☃, aqe1, 9, 5, 9, 10, 5, 10, afi.by.Q(), afi.by.Q(), false);
/* 1053 */     a(☃, aqe1, 10, 5, 4, 10, 5, 8, afi.by.Q(), afi.by.Q(), false);
/* 1054 */     j = a(afi.bA, 0);
/* 1055 */     int n = a(afi.bA, 1);
/* 1056 */     a(☃, afi.bA.a(n), 4, 5, 2, aqe1);
/* 1057 */     a(☃, afi.bA.a(n), 4, 5, 3, aqe1);
/* 1058 */     a(☃, afi.bA.a(n), 4, 5, 9, aqe1);
/* 1059 */     a(☃, afi.bA.a(n), 4, 5, 10, aqe1);
/* 1060 */     a(☃, afi.bA.a(j), 8, 5, 2, aqe1);
/* 1061 */     a(☃, afi.bA.a(j), 8, 5, 3, aqe1);
/* 1062 */     a(☃, afi.bA.a(j), 8, 5, 9, aqe1);
/* 1063 */     a(☃, afi.bA.a(j), 8, 5, 10, aqe1);
/*      */ 
/*      */     
/* 1066 */     a(☃, aqe1, 3, 4, 4, 4, 4, 8, afi.aW.Q(), afi.aW.Q(), false);
/* 1067 */     a(☃, aqe1, 8, 4, 4, 9, 4, 8, afi.aW.Q(), afi.aW.Q(), false);
/* 1068 */     a(☃, aqe1, 3, 5, 4, 4, 5, 8, afi.bB.Q(), afi.bB.Q(), false);
/* 1069 */     a(☃, aqe1, 8, 5, 4, 9, 5, 8, afi.bB.Q(), afi.bB.Q(), false);
/*      */ 
/*      */     
/* 1072 */     a(☃, aqe1, 4, 2, 0, 8, 2, 12, afi.by.Q(), afi.by.Q(), false);
/* 1073 */     a(☃, aqe1, 0, 2, 4, 12, 2, 8, afi.by.Q(), afi.by.Q(), false);
/*      */     
/* 1075 */     a(☃, aqe1, 4, 0, 0, 8, 1, 3, afi.by.Q(), afi.by.Q(), false);
/* 1076 */     a(☃, aqe1, 4, 0, 9, 8, 1, 12, afi.by.Q(), afi.by.Q(), false);
/* 1077 */     a(☃, aqe1, 0, 0, 4, 3, 1, 8, afi.by.Q(), afi.by.Q(), false);
/* 1078 */     a(☃, aqe1, 9, 0, 4, 12, 1, 8, afi.by.Q(), afi.by.Q(), false);
/*      */     int i1;
/* 1080 */     for (i1 = 4; i1 <= 8; i1++) {
/* 1081 */       for (int i2 = 0; i2 <= 2; i2++) {
/* 1082 */         b(☃, afi.by.Q(), i1, -1, i2, aqe1);
/* 1083 */         b(☃, afi.by.Q(), i1, -1, 12 - i2, aqe1);
/*      */       } 
/*      */     } 
/* 1086 */     for (i1 = 0; i1 <= 2; i1++) {
/* 1087 */       for (int i2 = 4; i2 <= 8; i2++) {
/* 1088 */         b(☃, afi.by.Q(), i1, -1, i2, aqe1);
/* 1089 */         b(☃, afi.by.Q(), 12 - i1, -1, i2, aqe1);
/*      */       } 
/*      */     } 
/*      */     
/* 1093 */     return true;
/*      */   }
/*      */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqj$k.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */