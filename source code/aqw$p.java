/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class p
/*     */   extends aqw.n
/*     */ {
/*     */   public p() {}
/*     */   
/*     */   public p(aqw.k ☃, int i, Random random, int j, int m) {
/* 404 */     super(☃, i);
/*     */     
/* 406 */     this.m = cq.c.a.a(random);
/*     */     
/* 408 */     switch (aqw.null.a[this.m.ordinal()]) {
/*     */       case 1:
/*     */       case 2:
/* 411 */         this.l = new aqe(j, 64, m, j + 6 - 1, 78, m + 6 - 1);
/*     */         return;
/*     */     } 
/* 414 */     this.l = new aqe(j, 64, m, j + 6 - 1, 78, m + 6 - 1);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void a(aqt ☃, List<aqt> list, Random random) {
/* 428 */     aqw.b((aqw.k)☃, list, random, this.l.a - 1, this.l.e - 4, this.l.c + 1, cq.e, d());
/* 429 */     aqw.b((aqw.k)☃, list, random, this.l.d + 1, this.l.e - 4, this.l.c + 1, cq.f, d());
/* 430 */     aqw.b((aqw.k)☃, list, random, this.l.a + 1, this.l.e - 4, this.l.c - 1, cq.c, d());
/* 431 */     aqw.b((aqw.k)☃, list, random, this.l.a + 1, this.l.e - 4, this.l.f + 1, cq.d, d());
/*     */   }
/*     */ 
/*     */   
/*     */   public boolean a(adm ☃, Random random, aqe aqe1) {
/* 436 */     if (this.h < 0) {
/* 437 */       this.h = b(☃, aqe1);
/* 438 */       if (this.h < 0) {
/* 439 */         return true;
/*     */       }
/* 441 */       this.l.a(0, this.h - this.l.e + 3, 0);
/*     */     } 
/*     */     
/* 444 */     a(☃, aqe1, 1, 0, 1, 4, 12, 4, afi.e.Q(), afi.i.Q(), false);
/* 445 */     a(☃, afi.a.Q(), 2, 12, 2, aqe1);
/* 446 */     a(☃, afi.a.Q(), 3, 12, 2, aqe1);
/* 447 */     a(☃, afi.a.Q(), 2, 12, 3, aqe1);
/* 448 */     a(☃, afi.a.Q(), 3, 12, 3, aqe1);
/*     */     
/* 450 */     a(☃, afi.aO.Q(), 1, 13, 1, aqe1);
/* 451 */     a(☃, afi.aO.Q(), 1, 14, 1, aqe1);
/* 452 */     a(☃, afi.aO.Q(), 4, 13, 1, aqe1);
/* 453 */     a(☃, afi.aO.Q(), 4, 14, 1, aqe1);
/* 454 */     a(☃, afi.aO.Q(), 1, 13, 4, aqe1);
/* 455 */     a(☃, afi.aO.Q(), 1, 14, 4, aqe1);
/* 456 */     a(☃, afi.aO.Q(), 4, 13, 4, aqe1);
/* 457 */     a(☃, afi.aO.Q(), 4, 14, 4, aqe1);
/* 458 */     a(☃, aqe1, 1, 15, 1, 4, 15, 4, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 460 */     for (int i = 0; i <= 5; i++) {
/* 461 */       for (int j = 0; j <= 5; j++) {
/*     */         
/* 463 */         if (j == 0 || j == 5 || i == 0 || i == 5) {
/*     */ 
/*     */           
/* 466 */           a(☃, afi.n.Q(), j, 11, i, aqe1);
/* 467 */           b(☃, j, 12, i, aqe1);
/*     */         } 
/*     */       } 
/*     */     } 
/* 471 */     return true;
/*     */   }
/*     */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqw$p.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */