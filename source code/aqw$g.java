/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class g
/*     */   extends aqw.n
/*     */ {
/*     */   private boolean a;
/*     */   
/*     */   public g() {}
/*     */   
/*     */   public g(aqw.k ☃, int i, Random random, aqe aqe1, cq cq1) {
/* 656 */     super(☃, i);
/*     */     
/* 658 */     this.m = cq1;
/* 659 */     this.l = aqe1;
/* 660 */     this.a = random.nextBoolean();
/*     */   }
/*     */ 
/*     */   
/*     */   protected void a(dn ☃) {
/* 665 */     super.a(☃);
/* 666 */     ☃.a("Terrace", this.a);
/*     */   }
/*     */ 
/*     */   
/*     */   protected void b(dn ☃) {
/* 671 */     super.b(☃);
/* 672 */     this.a = ☃.n("Terrace");
/*     */   }
/*     */   
/*     */   public static g a(aqw.k ☃, List<aqt> list, Random random, int i, int j, int m, cq cq1, int i1) {
/* 676 */     aqe aqe = aqe.a(i, j, m, 0, 0, 0, 5, 6, 5, cq1);
/*     */     
/* 678 */     if (aqt.a(list, aqe) != null) {
/* 679 */       return null;
/*     */     }
/*     */     
/* 682 */     return new g(☃, i1, random, aqe, cq1);
/*     */   }
/*     */ 
/*     */   
/*     */   public boolean a(adm ☃, Random random, aqe aqe1) {
/* 687 */     if (this.h < 0) {
/* 688 */       this.h = b(☃, aqe1);
/* 689 */       if (this.h < 0) {
/* 690 */         return true;
/*     */       }
/* 692 */       this.l.a(0, this.h - this.l.e + 6 - 1, 0);
/*     */     } 
/*     */ 
/*     */     
/* 696 */     a(☃, aqe1, 0, 0, 0, 4, 0, 4, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 698 */     a(☃, aqe1, 0, 4, 0, 4, 4, 4, afi.r.Q(), afi.r.Q(), false);
/* 699 */     a(☃, aqe1, 1, 4, 1, 3, 4, 3, afi.f.Q(), afi.f.Q(), false);
/*     */ 
/*     */     
/* 702 */     a(☃, afi.e.Q(), 0, 1, 0, aqe1);
/* 703 */     a(☃, afi.e.Q(), 0, 2, 0, aqe1);
/* 704 */     a(☃, afi.e.Q(), 0, 3, 0, aqe1);
/* 705 */     a(☃, afi.e.Q(), 4, 1, 0, aqe1);
/* 706 */     a(☃, afi.e.Q(), 4, 2, 0, aqe1);
/* 707 */     a(☃, afi.e.Q(), 4, 3, 0, aqe1);
/* 708 */     a(☃, afi.e.Q(), 0, 1, 4, aqe1);
/* 709 */     a(☃, afi.e.Q(), 0, 2, 4, aqe1);
/* 710 */     a(☃, afi.e.Q(), 0, 3, 4, aqe1);
/* 711 */     a(☃, afi.e.Q(), 4, 1, 4, aqe1);
/* 712 */     a(☃, afi.e.Q(), 4, 2, 4, aqe1);
/* 713 */     a(☃, afi.e.Q(), 4, 3, 4, aqe1);
/* 714 */     a(☃, aqe1, 0, 1, 1, 0, 3, 3, afi.f.Q(), afi.f.Q(), false);
/* 715 */     a(☃, aqe1, 4, 1, 1, 4, 3, 3, afi.f.Q(), afi.f.Q(), false);
/* 716 */     a(☃, aqe1, 1, 1, 4, 3, 3, 4, afi.f.Q(), afi.f.Q(), false);
/* 717 */     a(☃, afi.bj.Q(), 0, 2, 2, aqe1);
/* 718 */     a(☃, afi.bj.Q(), 2, 2, 4, aqe1);
/* 719 */     a(☃, afi.bj.Q(), 4, 2, 2, aqe1);
/*     */ 
/*     */     
/* 722 */     a(☃, afi.f.Q(), 1, 1, 0, aqe1);
/* 723 */     a(☃, afi.f.Q(), 1, 2, 0, aqe1);
/* 724 */     a(☃, afi.f.Q(), 1, 3, 0, aqe1);
/* 725 */     a(☃, afi.f.Q(), 2, 3, 0, aqe1);
/* 726 */     a(☃, afi.f.Q(), 3, 3, 0, aqe1);
/* 727 */     a(☃, afi.f.Q(), 3, 2, 0, aqe1);
/* 728 */     a(☃, afi.f.Q(), 3, 1, 0, aqe1);
/* 729 */     if (a(☃, 2, 0, -1, aqe1).c().t() == arm.a && a(☃, 2, -1, -1, aqe1).c().t() != arm.a) {
/* 730 */       a(☃, afi.aw.a(a(afi.aw, 3)), 2, 0, -1, aqe1);
/*     */     }
/*     */ 
/*     */     
/* 734 */     a(☃, aqe1, 1, 1, 1, 3, 3, 3, afi.a.Q(), afi.a.Q(), false);
/*     */ 
/*     */     
/* 737 */     if (this.a) {
/* 738 */       a(☃, afi.aO.Q(), 0, 5, 0, aqe1);
/* 739 */       a(☃, afi.aO.Q(), 1, 5, 0, aqe1);
/* 740 */       a(☃, afi.aO.Q(), 2, 5, 0, aqe1);
/* 741 */       a(☃, afi.aO.Q(), 3, 5, 0, aqe1);
/* 742 */       a(☃, afi.aO.Q(), 4, 5, 0, aqe1);
/* 743 */       a(☃, afi.aO.Q(), 0, 5, 4, aqe1);
/* 744 */       a(☃, afi.aO.Q(), 1, 5, 4, aqe1);
/* 745 */       a(☃, afi.aO.Q(), 2, 5, 4, aqe1);
/* 746 */       a(☃, afi.aO.Q(), 3, 5, 4, aqe1);
/* 747 */       a(☃, afi.aO.Q(), 4, 5, 4, aqe1);
/* 748 */       a(☃, afi.aO.Q(), 4, 5, 1, aqe1);
/* 749 */       a(☃, afi.aO.Q(), 4, 5, 2, aqe1);
/* 750 */       a(☃, afi.aO.Q(), 4, 5, 3, aqe1);
/* 751 */       a(☃, afi.aO.Q(), 0, 5, 1, aqe1);
/* 752 */       a(☃, afi.aO.Q(), 0, 5, 2, aqe1);
/* 753 */       a(☃, afi.aO.Q(), 0, 5, 3, aqe1);
/*     */     } 
/*     */ 
/*     */     
/* 757 */     if (this.a) {
/* 758 */       int j = a(afi.au, 3);
/* 759 */       a(☃, afi.au.a(j), 3, 1, 3, aqe1);
/* 760 */       a(☃, afi.au.a(j), 3, 2, 3, aqe1);
/* 761 */       a(☃, afi.au.a(j), 3, 3, 3, aqe1);
/* 762 */       a(☃, afi.au.a(j), 3, 4, 3, aqe1);
/*     */     } 
/*     */ 
/*     */     
/* 766 */     a(☃, afi.aa.Q().a(akf.a, this.m), 2, 3, 1, aqe1);
/*     */     
/* 768 */     for (int i = 0; i < 5; i++) {
/* 769 */       for (int j = 0; j < 5; j++) {
/* 770 */         b(☃, j, 6, i, aqe1);
/* 771 */         b(☃, afi.e.Q(), j, -1, i, aqe1);
/*     */       } 
/*     */     } 
/*     */     
/* 775 */     a(☃, aqe1, 1, 1, 2, 1);
/*     */     
/* 777 */     return true;
/*     */   }
/*     */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqw$g.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */