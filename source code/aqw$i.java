/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class i
/*     */   extends aqw.n
/*     */ {
/*     */   public i() {}
/*     */   
/*     */   public i(aqw.k ☃, int j, Random random, aqe aqe1, cq cq1) {
/* 791 */     super(☃, j);
/*     */     
/* 793 */     this.m = cq1;
/* 794 */     this.l = aqe1;
/*     */   }
/*     */   
/*     */   public static i a(aqw.k ☃, List<aqt> list, Random random, int j, int m, int i1, cq cq1, int i2) {
/* 798 */     aqe aqe = aqe.a(j, m, i1, 0, 0, 0, 5, 12, 9, cq1);
/*     */     
/* 800 */     if (!a(aqe) || aqt.a(list, aqe) != null) {
/* 801 */       return null;
/*     */     }
/*     */     
/* 804 */     return new i(☃, i2, random, aqe, cq1);
/*     */   }
/*     */ 
/*     */   
/*     */   public boolean a(adm ☃, Random random, aqe aqe1) {
/* 809 */     if (this.h < 0) {
/* 810 */       this.h = b(☃, aqe1);
/* 811 */       if (this.h < 0) {
/* 812 */         return true;
/*     */       }
/* 814 */       this.l.a(0, this.h - this.l.e + 12 - 1, 0);
/*     */     } 
/*     */ 
/*     */     
/* 818 */     a(☃, aqe1, 1, 1, 1, 3, 3, 7, afi.a.Q(), afi.a.Q(), false);
/* 819 */     a(☃, aqe1, 1, 5, 1, 3, 9, 3, afi.a.Q(), afi.a.Q(), false);
/*     */ 
/*     */     
/* 822 */     a(☃, aqe1, 1, 0, 0, 3, 0, 8, afi.e.Q(), afi.e.Q(), false);
/*     */ 
/*     */     
/* 825 */     a(☃, aqe1, 1, 1, 0, 3, 10, 0, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 827 */     a(☃, aqe1, 0, 1, 1, 0, 10, 3, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 829 */     a(☃, aqe1, 4, 1, 1, 4, 10, 3, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 831 */     a(☃, aqe1, 0, 0, 4, 0, 4, 7, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 833 */     a(☃, aqe1, 4, 0, 4, 4, 4, 7, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 835 */     a(☃, aqe1, 1, 1, 8, 3, 4, 8, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 837 */     a(☃, aqe1, 1, 5, 4, 3, 10, 4, afi.e.Q(), afi.e.Q(), false);
/*     */ 
/*     */     
/* 840 */     a(☃, aqe1, 1, 5, 5, 3, 5, 7, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 842 */     a(☃, aqe1, 0, 9, 0, 4, 9, 4, afi.e.Q(), afi.e.Q(), false);
/*     */     
/* 844 */     a(☃, aqe1, 0, 4, 0, 4, 4, 4, afi.e.Q(), afi.e.Q(), false);
/* 845 */     a(☃, afi.e.Q(), 0, 11, 2, aqe1);
/* 846 */     a(☃, afi.e.Q(), 4, 11, 2, aqe1);
/* 847 */     a(☃, afi.e.Q(), 2, 11, 0, aqe1);
/* 848 */     a(☃, afi.e.Q(), 2, 11, 4, aqe1);
/*     */ 
/*     */     
/* 851 */     a(☃, afi.e.Q(), 1, 1, 6, aqe1);
/* 852 */     a(☃, afi.e.Q(), 1, 1, 7, aqe1);
/* 853 */     a(☃, afi.e.Q(), 2, 1, 7, aqe1);
/* 854 */     a(☃, afi.e.Q(), 3, 1, 6, aqe1);
/* 855 */     a(☃, afi.e.Q(), 3, 1, 7, aqe1);
/* 856 */     a(☃, afi.aw.a(a(afi.aw, 3)), 1, 1, 5, aqe1);
/* 857 */     a(☃, afi.aw.a(a(afi.aw, 3)), 2, 1, 6, aqe1);
/* 858 */     a(☃, afi.aw.a(a(afi.aw, 3)), 3, 1, 5, aqe1);
/* 859 */     a(☃, afi.aw.a(a(afi.aw, 1)), 1, 2, 7, aqe1);
/* 860 */     a(☃, afi.aw.a(a(afi.aw, 0)), 3, 2, 7, aqe1);
/*     */ 
/*     */     
/* 863 */     a(☃, afi.bj.Q(), 0, 2, 2, aqe1);
/* 864 */     a(☃, afi.bj.Q(), 0, 3, 2, aqe1);
/* 865 */     a(☃, afi.bj.Q(), 4, 2, 2, aqe1);
/* 866 */     a(☃, afi.bj.Q(), 4, 3, 2, aqe1);
/* 867 */     a(☃, afi.bj.Q(), 0, 6, 2, aqe1);
/* 868 */     a(☃, afi.bj.Q(), 0, 7, 2, aqe1);
/* 869 */     a(☃, afi.bj.Q(), 4, 6, 2, aqe1);
/* 870 */     a(☃, afi.bj.Q(), 4, 7, 2, aqe1);
/* 871 */     a(☃, afi.bj.Q(), 2, 6, 0, aqe1);
/* 872 */     a(☃, afi.bj.Q(), 2, 7, 0, aqe1);
/* 873 */     a(☃, afi.bj.Q(), 2, 6, 4, aqe1);
/* 874 */     a(☃, afi.bj.Q(), 2, 7, 4, aqe1);
/* 875 */     a(☃, afi.bj.Q(), 0, 3, 6, aqe1);
/* 876 */     a(☃, afi.bj.Q(), 4, 3, 6, aqe1);
/* 877 */     a(☃, afi.bj.Q(), 2, 3, 8, aqe1);
/*     */ 
/*     */     
/* 880 */     a(☃, afi.aa.Q().a(akf.a, this.m.d()), 2, 4, 7, aqe1);
/* 881 */     a(☃, afi.aa.Q().a(akf.a, this.m.e()), 1, 4, 6, aqe1);
/* 882 */     a(☃, afi.aa.Q().a(akf.a, this.m.f()), 3, 4, 6, aqe1);
/* 883 */     a(☃, afi.aa.Q().a(akf.a, this.m), 2, 4, 5, aqe1);
/*     */ 
/*     */     
/* 886 */     int j = a(afi.au, 4); int k;
/* 887 */     for (k = 1; k <= 9; k++) {
/* 888 */       a(☃, afi.au.a(j), 3, k, 3, aqe1);
/*     */     }
/*     */ 
/*     */     
/* 892 */     a(☃, afi.a.Q(), 2, 1, 0, aqe1);
/* 893 */     a(☃, afi.a.Q(), 2, 2, 0, aqe1);
/* 894 */     a(☃, aqe1, random, 2, 1, 0, cq.b(a(afi.ao, 1)));
/* 895 */     if (a(☃, 2, 0, -1, aqe1).c().t() == arm.a && a(☃, 2, -1, -1, aqe1).c().t() != arm.a) {
/* 896 */       a(☃, afi.aw.a(a(afi.aw, 3)), 2, 0, -1, aqe1);
/*     */     }
/*     */     
/* 899 */     for (k = 0; k < 9; k++) {
/* 900 */       for (int m = 0; m < 5; m++) {
/* 901 */         b(☃, m, 12, k, aqe1);
/* 902 */         b(☃, afi.e.Q(), m, -1, k, aqe1);
/*     */       } 
/*     */     } 
/*     */     
/* 906 */     a(☃, aqe1, 2, 1, 2, 1);
/*     */     
/* 908 */     return true;
/*     */   }
/*     */ 
/*     */   
/*     */   protected int c(int ☃, int j) {
/* 913 */     return 2;
/*     */   }
/*     */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqw$i.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */