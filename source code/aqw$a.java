/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class a
/*      */   extends aqw.n
/*      */ {
/*      */   public a() {}
/*      */   
/*      */   public a(aqw.k ☃, int i, Random random, aqe aqe1, cq cq1) {
/*  927 */     super(☃, i);
/*      */     
/*  929 */     this.m = cq1;
/*  930 */     this.l = aqe1;
/*      */   }
/*      */   
/*      */   public static a a(aqw.k ☃, List<aqt> list, Random random, int i, int j, int m, cq cq1, int i1) {
/*  934 */     aqe aqe = aqe.a(i, j, m, 0, 0, 0, 9, 9, 6, cq1);
/*      */     
/*  936 */     if (!a(aqe) || aqt.a(list, aqe) != null) {
/*  937 */       return null;
/*      */     }
/*      */     
/*  940 */     return new a(☃, i1, random, aqe, cq1);
/*      */   }
/*      */ 
/*      */   
/*      */   public boolean a(adm ☃, Random random, aqe aqe1) {
/*  945 */     if (this.h < 0) {
/*  946 */       this.h = b(☃, aqe1);
/*  947 */       if (this.h < 0) {
/*  948 */         return true;
/*      */       }
/*  950 */       this.l.a(0, this.h - this.l.e + 9 - 1, 0);
/*      */     } 
/*      */ 
/*      */     
/*  954 */     a(☃, aqe1, 1, 1, 1, 7, 5, 4, afi.a.Q(), afi.a.Q(), false);
/*      */ 
/*      */     
/*  957 */     a(☃, aqe1, 0, 0, 0, 8, 0, 5, afi.e.Q(), afi.e.Q(), false);
/*      */     
/*  959 */     a(☃, aqe1, 0, 5, 0, 8, 5, 5, afi.e.Q(), afi.e.Q(), false);
/*  960 */     a(☃, aqe1, 0, 6, 1, 8, 6, 4, afi.e.Q(), afi.e.Q(), false);
/*  961 */     a(☃, aqe1, 0, 7, 2, 8, 7, 3, afi.e.Q(), afi.e.Q(), false);
/*  962 */     int i = a(afi.ad, 3);
/*  963 */     int j = a(afi.ad, 2); int k;
/*  964 */     for (k = -1; k <= 2; k++) {
/*  965 */       for (int i1 = 0; i1 <= 8; i1++) {
/*  966 */         a(☃, afi.ad.a(i), i1, 6 + k, k, aqe1);
/*  967 */         a(☃, afi.ad.a(j), i1, 6 + k, 5 - k, aqe1);
/*      */       } 
/*      */     } 
/*      */ 
/*      */     
/*  972 */     a(☃, aqe1, 0, 1, 0, 0, 1, 5, afi.e.Q(), afi.e.Q(), false);
/*  973 */     a(☃, aqe1, 1, 1, 5, 8, 1, 5, afi.e.Q(), afi.e.Q(), false);
/*  974 */     a(☃, aqe1, 8, 1, 0, 8, 1, 4, afi.e.Q(), afi.e.Q(), false);
/*  975 */     a(☃, aqe1, 2, 1, 0, 7, 1, 0, afi.e.Q(), afi.e.Q(), false);
/*  976 */     a(☃, aqe1, 0, 2, 0, 0, 4, 0, afi.e.Q(), afi.e.Q(), false);
/*  977 */     a(☃, aqe1, 0, 2, 5, 0, 4, 5, afi.e.Q(), afi.e.Q(), false);
/*  978 */     a(☃, aqe1, 8, 2, 5, 8, 4, 5, afi.e.Q(), afi.e.Q(), false);
/*  979 */     a(☃, aqe1, 8, 2, 0, 8, 4, 0, afi.e.Q(), afi.e.Q(), false);
/*      */ 
/*      */     
/*  982 */     a(☃, aqe1, 0, 2, 1, 0, 4, 4, afi.f.Q(), afi.f.Q(), false);
/*  983 */     a(☃, aqe1, 1, 2, 5, 7, 4, 5, afi.f.Q(), afi.f.Q(), false);
/*  984 */     a(☃, aqe1, 8, 2, 1, 8, 4, 4, afi.f.Q(), afi.f.Q(), false);
/*  985 */     a(☃, aqe1, 1, 2, 0, 7, 4, 0, afi.f.Q(), afi.f.Q(), false);
/*      */ 
/*      */     
/*  988 */     a(☃, afi.bj.Q(), 4, 2, 0, aqe1);
/*  989 */     a(☃, afi.bj.Q(), 5, 2, 0, aqe1);
/*  990 */     a(☃, afi.bj.Q(), 6, 2, 0, aqe1);
/*  991 */     a(☃, afi.bj.Q(), 4, 3, 0, aqe1);
/*  992 */     a(☃, afi.bj.Q(), 5, 3, 0, aqe1);
/*  993 */     a(☃, afi.bj.Q(), 6, 3, 0, aqe1);
/*  994 */     a(☃, afi.bj.Q(), 0, 2, 2, aqe1);
/*  995 */     a(☃, afi.bj.Q(), 0, 2, 3, aqe1);
/*  996 */     a(☃, afi.bj.Q(), 0, 3, 2, aqe1);
/*  997 */     a(☃, afi.bj.Q(), 0, 3, 3, aqe1);
/*  998 */     a(☃, afi.bj.Q(), 8, 2, 2, aqe1);
/*  999 */     a(☃, afi.bj.Q(), 8, 2, 3, aqe1);
/* 1000 */     a(☃, afi.bj.Q(), 8, 3, 2, aqe1);
/* 1001 */     a(☃, afi.bj.Q(), 8, 3, 3, aqe1);
/* 1002 */     a(☃, afi.bj.Q(), 2, 2, 5, aqe1);
/* 1003 */     a(☃, afi.bj.Q(), 3, 2, 5, aqe1);
/* 1004 */     a(☃, afi.bj.Q(), 5, 2, 5, aqe1);
/* 1005 */     a(☃, afi.bj.Q(), 6, 2, 5, aqe1);
/*      */ 
/*      */     
/* 1008 */     a(☃, aqe1, 1, 4, 1, 7, 4, 1, afi.f.Q(), afi.f.Q(), false);
/* 1009 */     a(☃, aqe1, 1, 4, 4, 7, 4, 4, afi.f.Q(), afi.f.Q(), false);
/* 1010 */     a(☃, aqe1, 1, 3, 4, 7, 3, 4, afi.X.Q(), afi.X.Q(), false);
/*      */ 
/*      */     
/* 1013 */     a(☃, afi.f.Q(), 7, 1, 4, aqe1);
/* 1014 */     a(☃, afi.ad.a(a(afi.ad, 0)), 7, 1, 3, aqe1);
/* 1015 */     k = a(afi.ad, 3);
/* 1016 */     a(☃, afi.ad.a(k), 6, 1, 4, aqe1);
/* 1017 */     a(☃, afi.ad.a(k), 5, 1, 4, aqe1);
/* 1018 */     a(☃, afi.ad.a(k), 4, 1, 4, aqe1);
/* 1019 */     a(☃, afi.ad.a(k), 3, 1, 4, aqe1);
/*      */ 
/*      */     
/* 1022 */     a(☃, afi.aO.Q(), 6, 1, 3, aqe1);
/* 1023 */     a(☃, afi.aB.Q(), 6, 2, 3, aqe1);
/* 1024 */     a(☃, afi.aO.Q(), 4, 1, 3, aqe1);
/* 1025 */     a(☃, afi.aB.Q(), 4, 2, 3, aqe1);
/* 1026 */     a(☃, afi.ai.Q(), 7, 1, 1, aqe1);
/*      */ 
/*      */     
/* 1029 */     a(☃, afi.a.Q(), 1, 1, 0, aqe1);
/* 1030 */     a(☃, afi.a.Q(), 1, 2, 0, aqe1);
/* 1031 */     a(☃, aqe1, random, 1, 1, 0, cq.b(a(afi.ao, 1)));
/* 1032 */     if (a(☃, 1, 0, -1, aqe1).c().t() == arm.a && a(☃, 1, -1, -1, aqe1).c().t() != arm.a) {
/* 1033 */       a(☃, afi.aw.a(a(afi.aw, 3)), 1, 0, -1, aqe1);
/*      */     }
/*      */     
/* 1036 */     for (int m = 0; m < 6; m++) {
/* 1037 */       for (int i1 = 0; i1 < 9; i1++) {
/* 1038 */         b(☃, i1, 9, m, aqe1);
/* 1039 */         b(☃, afi.e.Q(), i1, -1, m, aqe1);
/*      */       } 
/*      */     } 
/*      */     
/* 1043 */     a(☃, aqe1, 2, 1, 2, 1);
/*      */     
/* 1045 */     return true;
/*      */   }
/*      */ 
/*      */   
/*      */   protected int c(int ☃, int i) {
/* 1050 */     return 1;
/*      */   }
/*      */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqw$a.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */