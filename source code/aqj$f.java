/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class f
/*     */   extends aqj.m
/*     */ {
/*     */   public f() {}
/*     */   
/*     */   public f(int ☃, Random random, aqe aqe1, cq cq1) {
/* 839 */     super(☃);
/*     */     
/* 841 */     this.m = cq1;
/* 842 */     this.l = aqe1;
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(aqt ☃, List<aqt> list, Random random) {
/* 847 */     a((aqj.q)☃, list, random, 5, 3, true);
/*     */   }
/*     */   
/*     */   public static f a(List<aqt> ☃, Random random, int i, int j, int k, cq cq1, int n) {
/* 851 */     aqe aqe = aqe.a(i, j, k, -5, -3, 0, 13, 14, 13, cq1);
/*     */     
/* 853 */     if (!a(aqe) || aqt.a(☃, aqe) != null) {
/* 854 */       return null;
/*     */     }
/*     */     
/* 857 */     return new f(n, random, aqe, cq1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(adm ☃, Random random, aqe aqe1) {
/* 863 */     a(☃, aqe1, 0, 3, 0, 12, 4, 12, afi.by.Q(), afi.by.Q(), false);
/*     */     
/* 865 */     a(☃, aqe1, 0, 5, 0, 12, 13, 12, afi.a.Q(), afi.a.Q(), false);
/*     */ 
/*     */     
/* 868 */     a(☃, aqe1, 0, 5, 0, 1, 12, 12, afi.by.Q(), afi.by.Q(), false);
/* 869 */     a(☃, aqe1, 11, 5, 0, 12, 12, 12, afi.by.Q(), afi.by.Q(), false);
/* 870 */     a(☃, aqe1, 2, 5, 11, 4, 12, 12, afi.by.Q(), afi.by.Q(), false);
/* 871 */     a(☃, aqe1, 8, 5, 11, 10, 12, 12, afi.by.Q(), afi.by.Q(), false);
/* 872 */     a(☃, aqe1, 5, 9, 11, 7, 12, 12, afi.by.Q(), afi.by.Q(), false);
/* 873 */     a(☃, aqe1, 2, 5, 0, 4, 12, 1, afi.by.Q(), afi.by.Q(), false);
/* 874 */     a(☃, aqe1, 8, 5, 0, 10, 12, 1, afi.by.Q(), afi.by.Q(), false);
/* 875 */     a(☃, aqe1, 5, 9, 0, 7, 12, 1, afi.by.Q(), afi.by.Q(), false);
/*     */ 
/*     */     
/* 878 */     a(☃, aqe1, 2, 11, 2, 10, 12, 10, afi.by.Q(), afi.by.Q(), false);
/*     */ 
/*     */     
/* 881 */     a(☃, aqe1, 5, 8, 0, 7, 8, 0, afi.bz.Q(), afi.bz.Q(), false);
/*     */     
/*     */     int i;
/* 884 */     for (i = 1; i <= 11; i += 2) {
/* 885 */       a(☃, aqe1, i, 10, 0, i, 11, 0, afi.bz.Q(), afi.bz.Q(), false);
/* 886 */       a(☃, aqe1, i, 10, 12, i, 11, 12, afi.bz.Q(), afi.bz.Q(), false);
/* 887 */       a(☃, aqe1, 0, 10, i, 0, 11, i, afi.bz.Q(), afi.bz.Q(), false);
/* 888 */       a(☃, aqe1, 12, 10, i, 12, 11, i, afi.bz.Q(), afi.bz.Q(), false);
/* 889 */       a(☃, afi.by.Q(), i, 13, 0, aqe1);
/* 890 */       a(☃, afi.by.Q(), i, 13, 12, aqe1);
/* 891 */       a(☃, afi.by.Q(), 0, 13, i, aqe1);
/* 892 */       a(☃, afi.by.Q(), 12, 13, i, aqe1);
/* 893 */       a(☃, afi.bz.Q(), i + 1, 13, 0, aqe1);
/* 894 */       a(☃, afi.bz.Q(), i + 1, 13, 12, aqe1);
/* 895 */       a(☃, afi.bz.Q(), 0, 13, i + 1, aqe1);
/* 896 */       a(☃, afi.bz.Q(), 12, 13, i + 1, aqe1);
/*     */     } 
/* 898 */     a(☃, afi.bz.Q(), 0, 13, 0, aqe1);
/* 899 */     a(☃, afi.bz.Q(), 0, 13, 12, aqe1);
/* 900 */     a(☃, afi.bz.Q(), 0, 13, 0, aqe1);
/* 901 */     a(☃, afi.bz.Q(), 12, 13, 0, aqe1);
/*     */ 
/*     */     
/* 904 */     for (i = 3; i <= 9; i += 2) {
/* 905 */       a(☃, aqe1, 1, 7, i, 1, 8, i, afi.bz.Q(), afi.bz.Q(), false);
/* 906 */       a(☃, aqe1, 11, 7, i, 11, 8, i, afi.bz.Q(), afi.bz.Q(), false);
/*     */     } 
/*     */ 
/*     */     
/* 910 */     a(☃, aqe1, 4, 2, 0, 8, 2, 12, afi.by.Q(), afi.by.Q(), false);
/* 911 */     a(☃, aqe1, 0, 2, 4, 12, 2, 8, afi.by.Q(), afi.by.Q(), false);
/*     */     
/* 913 */     a(☃, aqe1, 4, 0, 0, 8, 1, 3, afi.by.Q(), afi.by.Q(), false);
/* 914 */     a(☃, aqe1, 4, 0, 9, 8, 1, 12, afi.by.Q(), afi.by.Q(), false);
/* 915 */     a(☃, aqe1, 0, 0, 4, 3, 1, 8, afi.by.Q(), afi.by.Q(), false);
/* 916 */     a(☃, aqe1, 9, 0, 4, 12, 1, 8, afi.by.Q(), afi.by.Q(), false);
/*     */     
/* 918 */     for (i = 4; i <= 8; i++) {
/* 919 */       for (int j = 0; j <= 2; j++) {
/* 920 */         b(☃, afi.by.Q(), i, -1, j, aqe1);
/* 921 */         b(☃, afi.by.Q(), i, -1, 12 - j, aqe1);
/*     */       } 
/*     */     } 
/* 924 */     for (i = 0; i <= 2; i++) {
/* 925 */       for (int j = 4; j <= 8; j++) {
/* 926 */         b(☃, afi.by.Q(), i, -1, j, aqe1);
/* 927 */         b(☃, afi.by.Q(), 12 - i, -1, j, aqe1);
/*     */       } 
/*     */     } 
/*     */ 
/*     */     
/* 932 */     a(☃, aqe1, 5, 5, 5, 7, 5, 7, afi.by.Q(), afi.by.Q(), false);
/* 933 */     a(☃, aqe1, 6, 1, 6, 6, 4, 6, afi.a.Q(), afi.a.Q(), false);
/* 934 */     a(☃, afi.by.Q(), 6, 0, 6, aqe1);
/* 935 */     a(☃, afi.k.Q(), 6, 5, 6, aqe1);
/*     */     
/* 937 */     cj cj = new cj(a(6, 6), d(5), b(6, 6));
/* 938 */     if (aqe1.b(cj)) {
/* 939 */       ☃.a(afi.k, cj, random);
/*     */     }
/*     */     
/* 942 */     return true;
/*     */   }
/*     */ }


/* Location:              /Users/michaelmc/Downloads/MyloClientCrack-main/MyloClient/MyloClient.jar!/aqj$f.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */